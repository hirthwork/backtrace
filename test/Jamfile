import feature : feature compose ;
import testing ;
import c-std ;
import noweb ;

feature c-std-test : off on ;

feature testing-launcher : none valgrind : propagated composite ;
compose <testing-launcher>valgrind
    : <testing.launcher>"valgrind --leak-check=full --error-exitcode=1 --track-origins=yes -q --suppressions=test/glibc.supp"
    ;

project
    : requirements <target-os>freebsd:<include>/usr/local/include
    ;

compile backtrace-double-inclusion-c.c ;
compile backtrace-double-inclusion.cpp ;
compile inline-double-inclusion-c.c ;
compile inline-double-inclusion.cpp ;
compile demangle-double-inclusion.cpp ;
compile extract-double-inclusion-c.c ;
compile extract-double-inclusion.cpp ;
compile frames-double-inclusion.c ;
compile helpers-double-inclusion.cpp ;
compile record-double-inclusion-c.c ;
compile record-double-inclusion.cpp ;
compile unwind-double-inclusion.c ;

compile malloced-explicit-good.cpp ;
compile-fail malloced-explicit-bad.cpp ;

compile demangled-explicit-good.cpp ;
compile-fail demangled-explicit-bad.cpp ;

compile backtrace-explicit-good.cpp ;
compile-fail backtrace-explicit-bad.cpp ;

obj test-inline : test-no-inline.c : <c-std-test>off ;
obj test-inline : test-no-inline.c : <c-std-test>on <c-std>c89 ;
obj test-inline : test-inline.c : <c-std-test>on <c-std>c99 ;
obj test-inline : test-inline.c : <c-std-test>on <c-std>c1x ;
run test-inline ;

obj test-backtrace-c-obj : test-backtrace-c.c : <optimization>off ;
unit-test test-backtrace-c : test-backtrace-c-obj ..//backtrace ;

obj test-backtrace-obj : test-backtrace.cpp : <optimization>off ;
unit-test test-backtrace : test-backtrace-obj ..//backtracexx ;

obj test-demangle-obj : test-demangle.cpp : <optimization>off ;
unit-test test-demangle : test-demangle-obj ..//backtracexx ;

obj test-record-obj : test-record.cpp : <optimization>off ;
unit-test test-record : test-record-obj ..//backtracexx ;

unit-test use-backtrace : ../README.nw ..//backtrace : <chunk>use-backtrace.c ;

